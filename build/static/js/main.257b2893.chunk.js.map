{"version":3,"sources":["services/network.js","components/Persons.js","components/PersonForm.js","components/Filter.js","App.js","index.js"],"names":["baseUrl","network","axios","get","then","response","data","newObject","post","id","url","concat","delete","put","Entry","_ref","person","deleteHandler","react_default","a","createElement","className","name","number","onClick","Persons","_ref2","persons","entries","map","Persons_Entry","key","PersonForm","props","onHandleNewEntry","onNumberInputChange","onNameInputChange","value","onChange","type","Filter","filterState","onChangeListener","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","visible","success","_useState10","notification","setNotification","useEffect","networkService","Fragment","setTimeout","message","notificationView","components_Filter","event","target","components_PersonForm","preventDefault","newPerson","Number","some","p","window","confirm","console","log","updatedPerson","status","respPerson","components_Persons","indexOf","getAttribute","find","catch","err","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.257b2893.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst deletePerson = id => {\n  const url = `${baseUrl}/${id}`\n  return axios.delete(url)\n}\n\nconst update = (id, newObject) => {\n  const url = `${baseUrl}/${id}`\n  return axios.put(url, newObject)\n}\n\nexport default {\n  getAll, create,deletePerson, update\n}\n","import React from 'react'\n\nconst Entry = ({ person, deleteHandler }) => {\n  return (\n    <li className='person' id={person.id}>\n      {person.name} {person.number}\n      <button id={person.id} onClick={deleteHandler}>delete</button>\n    </li>\n  )\n}\n\nconst Persons = ({ persons, deleteHandler }) => {\n  const entries = persons.map(person => <Entry key={person.id} person={person} deleteHandler={deleteHandler} />)\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <ul>\n        {entries}\n      </ul>\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\n\n\nconst PersonForm = (props) => {\n  const {name, number, onHandleNewEntry, onNumberInputChange, onNameInputChange} = props\n\n  return (\n\n    <form>\n      <h2>Add a new number</h2>\n      <div>\n        name: <input value={name} onChange={onNameInputChange} />\n      </div>\n      <div>\n        number: <input value={number} onChange={onNumberInputChange} />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={onHandleNewEntry}>add</button>\n      </div>\n    </form>\n\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({filterState, onChangeListener }) => {\n  return (\n    <div>\n      <h2>Filter</h2>\n      <input value={filterState} onChange={onChangeListener}/>\n    </div>\n  )\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport networkService from './services/network'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState({\n    visible: false,\n    name: '',\n    success: ''\n  })\n\n  useEffect(() => {\n    networkService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  const onFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const onNameInputChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const onNumberInputChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const onHandleNewEntry = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: Number(newNumber),\n    }\n\n    if (persons.some(p => p.name === newPerson.name && p.number !== newPerson.number)) {\n      if (!window.confirm(`${newPerson.number} is already added to phonebook, replace the old number with a new one?`)) {\n        return\n      }\n      const id = persons.filter(p => p.name === newPerson.name)[0].id\n      console.log(`${id} of person to be updated`)\n      networkService\n        .update(id, newPerson)\n        .then(response => {\n          const updatedPerson = response.data\n          console.log(updatedPerson)\n          setNotification({\n            success: response.status === 200,\n            visible: true,\n            message: response.status === 200 ? `Updated ${updatedPerson.name}` : `Can't update ${newPerson.name}`\n          })\n          setPersons(persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson))\n        })\n    } else {\n      networkService\n        .create(newPerson)\n        .then(response => {\n          console.log(response)\n          const respPerson = response.data\n          console.log(respPerson)\n          setNotification({\n            visible: true,\n            success: response.status === 201,\n            message: response.status === 201 ? `Added ${respPerson.name}` : `Can't add ${newPerson.name}`\n          })\n          setPersons(persons.concat(respPerson))\n        }\n      )\n    }\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const handleDelete = (event) => {\n    event.preventDefault()\n    const id =Number(event.target.getAttribute('id'))\n\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${person.name}`)) {\n      networkService\n        .deletePerson(id)\n        .then(response => {\n          if(response.status === 200){\n            setNotification({\n              success: true,\n              visible: true,\n              message: `${person.name} is deleted`\n            })\n            setPersons(persons.filter(p => p.id !== id))\n          }\n        })\n        .catch(err => {\n          setNotification({\n            success: false,\n            visible: true,\n            message: `${person.name} can not be deleted`\n          })\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  const notificationView = () => {\n    if(!notification.visible){\n      return (<></>)\n    }\n    const type = notification.success ? 'success' : 'fail'\n    setTimeout(() => {setNotification({visible: false})}, 3000);\n    return (\n      <p className={'notification ' + type}>{notification.message}</p>\n    )\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notificationView()}\n      <Filter filterState={filter} onChangeListener={onFilter} />\n      <PersonForm\n        onNameInputChange={onNameInputChange}\n        onNumberInputChange={onNumberInputChange}\n        onHandleNewEntry={onHandleNewEntry}\n        number={newNumber}\n        name={newName}\n      />\n      <Persons persons={persons.filter(p => p.name.indexOf(filter) !== -1)} deleteHandler={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}